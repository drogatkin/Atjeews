<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE bee PUBLIC "-//Dmitriy Rogatkin//DTD Bee Project Builder 1.0//EN"
    "https://raw.githubusercontent.com/drogatkin/7Bee/master/bee.dtd" [
      <!ENTITY android_sdk "/home/dmitriy/Android/Sdk">
      <!ENTITY jdk_root "">
      <!ENTITY tjws_src "/home/dmitriy/projects/TJWS2/1.x">
      <!ENTITY jasper "/home/dmitriy/projects/jasper-8.5.78">
      <!ENTITY websoketx "no">
      <!ENTITY fast_scanner "/home/dmitriy/projects/fast-classpath-scanner/lib">
      <!ENTITY keystore "/home/dmitriy/Documents/android-publish.keystore">
      <!ENTITY sdklib_custom "/home/dmitriy/projects/sdklib/build">
      <!ENTITY target "32">
      <!ENTITY min_sdk "6">
      <!ENTITY version_name "1.46">
      <!ENTITY version_code "21">
      <!ENTITY build_tool "30.0.3">
      <!ENTITY build_directory "build">
]>
<!-- Build Atjeews Copyright 2022 (c) Dmitriy Rogatkin 
     ref: https://github.com/2BAB/BuildingAndroidAppManually/blob/master/build.sh -->
<bee name="apk-packaging" type="script">
     <expression name="apk tmp dir" >
         <operator name="append" >
             <value
                 name="java.io.tmpdir"
                 type="property" />
             <value>/apk_temp</value>
         </operator>
     </expression>
     <expression name="apk file">
         <value>atjeews</value>
     </expression>
     <expression name="unpacked apk">
         <operator name="append">
             <value variable="apk tmp dir"/>
             <value>/</value>
             <function name="filename">
                 <parameter variable="apk file"/>
             </function>
             <value>.apk</value>
         </operator>
     </expression>
     <expression name="apk gen dir" >
         <operator name="append" >
             <value
                 variable="apk tmp dir" />
             <value>/gen</value>
         </operator>
     </expression>
     <expression name="apk gen file" >
         <operator name="append" >
             <value
                 variable="apk gen dir" />
             <value>/*.flat</value>
         </operator>
     </expression>
     <expression name="aapt2">
         <operator name="append">
           <value>&android_sdk;/build-tools/&build_tool;/aapt2</value>
         </operator>
     </expression>
     <expression name="aidl">
         <operator name="append">
           <value>&android_sdk;/build-tools/&build_tool;/aidl</value>
         </operator>
     </expression>
     <target name="remove_old">
        <block>
             <echo>Cleaning the working folder</echo>
                    <expression name="clean dir*">
                        <operator name="append">
                            <value variable="apk tmp dir"/>
                            <value>/*/*/*/*/*/*/*/*/*/*/*/*/*/*</value>
                        </operator>
                    </expression>
                    <if>
                        <expression>
                            <!--echo variable="clean dir*"/>
                            <value>true</value-->
                            <function name="rm">
                                <parameter variable="clean dir*"/>
                            </function>
                        </expression>
                        <else>
                            <echo>Can not clean the directory ${clean dir*}, please do it manually and restart the script</echo>
                            <interrupt/>
                        </else>
                    </if>
       </block>
     </target>
     <target name="create dirs">
        <dependency target="remove_old"></dependency>
        <block>
           <function name="mkd">
              <parameter variable="apk gen dir"/>
            </function>
        </block>      
     </target>
     <expression variable="src">
      <operator name="append">
         <value type="path">src</value>
      </operator>
     </expression>
     <variable name="empty str">
</variable>
     <target name="idl gen">
         <dependency target="create dirs"></dependency>
         <task exec="aidl" stdin="empty str">
            <parameter>-I</parameter>
            <parameter variable="src"/>
            <parameter>-o</parameter>
             <parameter variable="apk gen dir"/>
            <parameter>src/rogatkin/mobile/web/RCServ.aidl</parameter>
         </task>
     </target>
     
     <target name="pack_res">
         <dependency target="idl gen"></dependency>
       
         <task exec="aapt2">
            <parameter>compile</parameter>
            <parameter>-o</parameter>
             <parameter variable="apk gen dir"/>
             <!--parameter variable="unpacked apk"/-->
             <parameter>--dir</parameter>
             <parameter>res</parameter>
         </task>
     </target>
     
     <target name="link_res">
         <dependency target="pack_res"></dependency>
             <task exec="aapt2">
             <parameter>link</parameter>
             <parameter variable="apk gen file" type="file"/>
             <!--parameter>
                  <operator name="append">
                     <value variable="apk gen dir"/>
                     <value>/*.flat</value>
                  </operator>
             </parameter-->
             <parameter>--java</parameter>
             <parameter variable="apk gen dir"/>
             <parameter>-I</parameter> 
             <parameter>&android_sdk;/platforms/android-&target;/android.jar</parameter>
             <parameter>--min-sdk-version</parameter>
             <parameter>&min_sdk;</parameter>
             <parameter>--target-sdk-version</parameter>
             <parameter value="&target;"/>
             <parameter>-o</parameter>
             <parameter>Atjeews.apk.link</parameter>"
             <parameter>--manifest</parameter> 
             <parameter>AndroidManifest.xml</parameter>
             <parameter>--version-code</parameter>
             <parameter>&version_code;</parameter>
             <parameter>--version-name</parameter>
             <parameter>&version_name;</parameter>
             <parameter value="-v"/>
         </task>
     </target>
     
   <target name="check build" dir="PROJECT_HOME">
     <dependency>true</dependency>
     <block>
       <if>
          <expression>
		  <operator name="eq">
		    <function name ="timestamp">
		       <parameter value="&build_directory;"/>
		    </function>
		    <value></value>
		 </operator>
          </expression>
          <then>
	       <function name="mkd">
		 <parameter value="&build_directory;"/>
	       </function>
	  </then>
	  <else>
	       <echo>Cleaning the build directory &build_directory;</echo>
	       <function name="rm">
		  <parameter value="&build_directory;/*/*/*/*/*"/>
		  <parameter value="&build_directory;/${apk file}.jar"/>
	       </function>
	  </else>
        </if>
     </block>
  </target>
  <expression variable="PATH SEPARATOR">
      <value name="path.separator" type="property"/>
  </expression>
     <variable name="PROJECT_HOME" type="path">.</variable>
     
     <expression variable="R file">
        <operator name="append">
           <value variable="apk gen dir"/>
           <value>/rogatkin/mobile/web/R.java</value>
        </operator>
     </expression>
     <expression variable="IDL java file">
        <operator name="append">
           <value variable="apk gen dir"/>
           <value>/rogatkin/mobile/web/RCServ.java</value>
        </operator>
     </expression>
     
     <expression variable="java sources">
        <operator name="array">
           <value value="src/rogatkin/mobile/web/*.java" type="file"/>
           <value variable="R file"/>
           <value variable="IDL java file"/>
        </operator>
     </expression>
     
      <variable name="JAVA_HOME"/>
      <expression variable="JAVA_HOME">
      <if>
       <expression>
         <operator name="eq">
            <value>/</value>
            <value name="file.separator" type="property"/>
         </operator>
       </expression>
       <block type="then">
         <function name="scalar">
            <parameter>
               <function name="cropname">
                  <parameter name="java.home" type="property"/>
                  <parameter>/jre</parameter>
               </function> 
             </parameter>
          </function>
       </block>
       <block type="else">
         <value name="java.home" type="property"/>
       </block>
     </if>
  </expression> 
  <expression variable="JAVA_HOME">
     <function name="cropname">
        <parameter variable="JAVA_HOME"/>
        <parameter>\\jre</parameter>
     </function>
  </expression> 
  <expression variable="javac">
     <operator name="append">
        <value value="${JAVA_HOME}/bin/javac"/>
     </operator>
  </expression>
  <expression variable="CUSTOM CP">
    <operator name="append">
       <value>&tjws_src;/lib/webserver.jar</value>
       <value variable="PATH SEPARATOR"/>
       <value>&tjws_src;/lib/war.jar</value>
       <value variable="PATH SEPARATOR"/>
       <value>&tjws_src;/lib/wskt.jar</value>
       <value variable="PATH SEPARATOR"/>
       <value>&jasper;/build/jasper.jar</value>
       <value variable="PATH SEPARATOR"/>
       <value>&fast_scanner;/class-scanner.jar</value>
    </operator>
  </expression>
  <expression variable="CUSTOM CP">
	  <if>
	     <expression>
		 <operator name="eq">
		    <value>&websoketx;</value>
		    <value>yes</value>
		</operator>
	     </expression>
	     <then>
		   <operator name="append">
		      <value>${CUSTOM CP}${PATH SEPARATOR}</value>
		      <value type="repo_artifact">maven:javax.websocket:javax.websocket-api:1.1</value>
		   </operator>
	     </then>
	     <else>
	        <value variable="CUSTOM CP"/>
	     </else>
	  </if>
  </expression>
  <expression variable="class path">
     <operator name="append">
        <value variable="CUSTOM CP"/>
     </operator>
  </expression>
  
  <variable name="comp target">1.8</variable>
  <echo>Sources: ${java sources,,} and cp ${class path}</echo>
  <target name="compile" dir="PROJECT_HOME">
    <dependency target="check build"/>
    <dependency variable="java sources"/>
    <dependency target="link_res"/>
    <task exec="javac">
       <parameter value="-Xbootclasspath:&android_sdk;/platforms/android-&target;/android.jar"/>
       <!--parameter value="&android_sdk;/platforms/android-&target;/android.jar"/-->
       <parameter value="-classpath"/>
       <parameter variable="class path"/>
       <parameter value="-source"/>
       <parameter variable="comp target"/>
       <parameter value="-target"/>
       <parameter variable="comp target"/>
       <parameter value="-d"/>
       <parameter value="&build_directory;"/>
       <parameter variable="java sources"/>
      <onexit>
        <if>
          <expression>
             <operator name="neq"><value variable="resultcode"/><value>0</value></operator>
          </expression>
          <block type="then">
                 <echo>Error(s) at compilation</echo>
                 <function name="stop">
			<parameter value="1"/>
                 </function>
          </block>
       </if>
      </onexit>
      <onexception>
	<block>
                 <echo>Exception at compilation</echo>
                 <echo variable="~#error#~"/>
                 <function name="stop">
			<parameter value="-1"/>
                 </function>
	</block>
      </onexception>
    </task>
  </target> 
  <target name="jar">
    <echo>Jarring ${apk file}...</echo>
    <dependency target="compile"/>
    <task name="jar_do" code="sun.tools.jar.Main" tool="jar">
       <parameter>-cf</parameter>
       <parameter value="&build_directory;/${apk file}.jar"/>
       <parameter value="-C"/>
       <parameter value="&build_directory;"/>
       <parameter value="rogatkin"/>
      <onexception>
	<block>
                 <echo>Exception at jarring ${apk file}.jar</echo>
                 <function name="stop">
			<parameter value="-1"/>
                 </function>
	</block>
      </onexception>
    </task>
  </target>
  <expression name="dex lib">
     <operator name="append">
         <value variable="apk tmp dir"/>
     </operator>
  </expression>
  <variable name="jar names"/>
  <expression name="jar names">
      <for variable="app archive" in="class path" separator="PATH SEPARATOR">
         <expression name="jar names">              
         <operator name="array">
            <value variable="jar names"/>
            <value variable="app archive"/>
         </operator>
         </expression>
     </for>
     <operator name="array">
            <value variable="jar names"/>
            <value value="&build_directory;/${apk file}.jar"/>
     </operator>
  </expression>       

  <variable name="dx8 path">&android_sdk;/build-tools/&build_tool;/lib/d8.jar</variable>
  
  <target name="d8">
      <dependency target="jar"/>
      <task name="d8_do" code="com.android.tools.r8.D8" path="dx8 path"> <!-- without dex com.android.dx.command.dexer.Main  -->
            <parameter value="--lib"/>
            <parameter value="&android_sdk;/platforms/android-&target;/android.jar"/>
            <parameter value="--release"/>
            <parameter value="--output"/>>
            <parameter variable="dex lib"/>
            <parameter variable="jar names"/>
      </task> 
  </target> 
  
     <target name="complete" dir=".">
      <dependency target="d8"/>
     <block>
     <function name="mkd">
         <parameter variable="unpacked apk"/>
     </function>
     <expression name="unpacked apk wc">
         <operator name="append">
             <value variable="unpacked apk"></value>
             <value>/*/*/*/*/*/*/*/*/*/*/*/*/*/*</value>
         </operator>
     </expression>
     <for variable="apk file" in="class path" separator="PATH SEPARATOR">
        <block>
        <function name="unzip">
            <parameter variable="apk file"/>
            <parameter variable="unpacked apk"/>
            <parameter>./*.properties</parameter>
            <parameter>./*.dtd</parameter>
            <parameter>./*.xsd</parameter>
            <parameter>./*.MF</parameter>
            <parameter>./*Configurator</parameter> <!-- /resources/META-INF/services/javax.websocket.server.ServerEndpointConfig$Configurator -->
            <parameter>./javax.*</parameter>
        </function> 
        </block>
     </for>
     
     <expression name="custom tools path">
        <operator name="append">
           <value value="&sdklib_custom;/android-build.jar"/>
        </operator>   
     </expression>
     <!-- Note: the builder is patched to populate META-INF/... correctly 
          The custom build mimics sdklib-26.0.0-dev.jar from Androllid SDK tools -->
     <task code="com.android.sdklib.build.ApkBuilderMain" path="custom tools path">
         <parameter value="Atjeews.apk.unaligned"/>
         <parameter value="-u"/>
         <parameter value="-v"/>
         <parameter value="-z"/>
         <parameter value="Atjeews.apk.link"/>
         <parameter value="-f"/>
         <parameter value="${dex lib}/classes.dex"></parameter>
         <parameter value="-rf"/>
         <parameter variable="unpacked apk"/>
     </task>

     <task exec="&android_sdk;/build-tools/&build_tool;/zipalign" path="&android_sdk;/build-tools/&build_tool;">
          <parameter>-v</parameter>
          <parameter>4</parameter>
          <parameter variable="Atjeews.apk.unaligned"/>
          <parameter value="${apk file}.align"/>  
      </task>
     
      <task exec="&android_sdk;/build-tools/&build_tool;/apksigner" path="&android_sdk;/build-tools/&build_tool;">
          <parameter>sign</parameter>
          <parameter>-ks</parameter>
          <parameter>&keystore;</parameter>
          <parameter value="${apk file}.align"/>
          
     </task>
      <function name="rm">
         <parameter variable="Atjeews.apk.unaligned"/>
         <parameter variable="Atjeews.apk.link"/>
      </function>
     <function name="mv">
         <parameter value="${apk file}.align"/>
         <parameter value="${apk file}.apk"/>
     </function> 
     <echo>Done.</echo>
     </block>
     </target>
</bee>
